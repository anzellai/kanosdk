// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kanosdk.proto

package kanosdk

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeviceRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRequest) Reset()         { *m = DeviceRequest{} }
func (m *DeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeviceRequest) ProtoMessage()    {}
func (*DeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_kanosdk_4e9bb2e9e90a4d29, []int{0}
}
func (m *DeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRequest.Unmarshal(m, b)
}
func (m *DeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRequest.Marshal(b, m, deterministic)
}
func (dst *DeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRequest.Merge(dst, src)
}
func (m *DeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeviceRequest.Size(m)
}
func (m *DeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRequest proto.InternalMessageInfo

func (m *DeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeviceRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type DeviceResponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceResponse) Reset()         { *m = DeviceResponse{} }
func (m *DeviceResponse) String() string { return proto.CompactTextString(m) }
func (*DeviceResponse) ProtoMessage()    {}
func (*DeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_kanosdk_4e9bb2e9e90a4d29, []int{1}
}
func (m *DeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceResponse.Unmarshal(m, b)
}
func (m *DeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceResponse.Marshal(b, m, deterministic)
}
func (dst *DeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceResponse.Merge(dst, src)
}
func (m *DeviceResponse) XXX_Size() int {
	return xxx_messageInfo_DeviceResponse.Size(m)
}
func (m *DeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceResponse proto.InternalMessageInfo

func (m *DeviceResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceRequest)(nil), "kanosdk.DeviceRequest")
	proto.RegisterType((*DeviceResponse)(nil), "kanosdk.DeviceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectorClient is the client API for Connector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectorClient interface {
	Communicate(ctx context.Context, opts ...grpc.CallOption) (Connector_CommunicateClient, error)
}

type connectorClient struct {
	cc *grpc.ClientConn
}

func NewConnectorClient(cc *grpc.ClientConn) ConnectorClient {
	return &connectorClient{cc}
}

func (c *connectorClient) Communicate(ctx context.Context, opts ...grpc.CallOption) (Connector_CommunicateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Connector_serviceDesc.Streams[0], "/kanosdk.Connector/Communicate", opts...)
	if err != nil {
		return nil, err
	}
	x := &connectorCommunicateClient{stream}
	return x, nil
}

type Connector_CommunicateClient interface {
	Send(*DeviceRequest) error
	Recv() (*DeviceResponse, error)
	grpc.ClientStream
}

type connectorCommunicateClient struct {
	grpc.ClientStream
}

func (x *connectorCommunicateClient) Send(m *DeviceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *connectorCommunicateClient) Recv() (*DeviceResponse, error) {
	m := new(DeviceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConnectorServer is the server API for Connector service.
type ConnectorServer interface {
	Communicate(Connector_CommunicateServer) error
}

func RegisterConnectorServer(s *grpc.Server, srv ConnectorServer) {
	s.RegisterService(&_Connector_serviceDesc, srv)
}

func _Connector_Communicate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ConnectorServer).Communicate(&connectorCommunicateServer{stream})
}

type Connector_CommunicateServer interface {
	Send(*DeviceResponse) error
	Recv() (*DeviceRequest, error)
	grpc.ServerStream
}

type connectorCommunicateServer struct {
	grpc.ServerStream
}

func (x *connectorCommunicateServer) Send(m *DeviceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *connectorCommunicateServer) Recv() (*DeviceRequest, error) {
	m := new(DeviceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Connector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kanosdk.Connector",
	HandlerType: (*ConnectorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Communicate",
			Handler:       _Connector_Communicate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "kanosdk.proto",
}

func init() { proto.RegisterFile("kanosdk.proto", fileDescriptor_kanosdk_4e9bb2e9e90a4d29) }

var fileDescriptor_kanosdk_4e9bb2e9e90a4d29 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4e, 0xcc, 0xcb,
	0x2f, 0x4e, 0xc9, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xcc, 0xb9,
	0x78, 0x5d, 0x52, 0xcb, 0x32, 0x93, 0x53, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84,
	0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x90,
	0x58, 0x4a, 0x62, 0x49, 0xa2, 0x04, 0x13, 0x44, 0x0c, 0xc4, 0x56, 0x52, 0xe1, 0xe2, 0x83, 0x69,
	0x2c, 0x2e, 0xc8, 0xcf, 0x2b, 0x46, 0xa8, 0x62, 0x44, 0xa8, 0x32, 0x0a, 0xe4, 0xe2, 0x74, 0xce,
	0xcf, 0xcb, 0x4b, 0x4d, 0x2e, 0xc9, 0x2f, 0x12, 0x72, 0xe1, 0xe2, 0x76, 0xce, 0xcf, 0xcd, 0x2d,
	0xcd, 0xcb, 0x4c, 0x4e, 0x2c, 0x49, 0x15, 0x12, 0xd3, 0x83, 0xb9, 0x09, 0xc5, 0x05, 0x52, 0xe2,
	0x18, 0xe2, 0x10, 0x0b, 0x94, 0x18, 0x34, 0x18, 0x0d, 0x18, 0x93, 0xd8, 0xc0, 0x3e, 0x30, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x50, 0xae, 0x03, 0x89, 0xd2, 0x00, 0x00, 0x00,
}
