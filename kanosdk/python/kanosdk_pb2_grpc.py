# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import kanosdk_pb2 as kanosdk__pb2


class ConnectorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Communicate = channel.stream_stream(
        '/kanosdk.Connector/Communicate',
        request_serializer=kanosdk__pb2.StreamRequest.SerializeToString,
        response_deserializer=kanosdk__pb2.StreamResponse.FromString,
        )


class ConnectorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Communicate(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ConnectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Communicate': grpc.stream_stream_rpc_method_handler(
          servicer.Communicate,
          request_deserializer=kanosdk__pb2.StreamRequest.FromString,
          response_serializer=kanosdk__pb2.StreamResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kanosdk.Connector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
